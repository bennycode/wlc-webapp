<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.welovecoding.web</groupId>
  <artifactId>wlc-webapp</artifactId>
  <version>0.0.37-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>We Love Coding (webapp)</name>
  <url>https://github.com/bennyn/wlc-webapp</url>
  <inceptionYear>2014</inceptionYear>
  <description>We Love Coding provides a numerous collection of video tutorials for developers. The spectrum ranges from the introduction to object-oriented programming languages such as C#, Java, Ruby, and C++ to topics of web development with HTML5 and JavaScript and to the development of apps for iOS, Android and Windows Phone.</description>
  <organization>
    <name>We Love Coding</name>
    <url>http://www.welovecoding.com</url>
  </organization>
  <developers>
    <developer>
      <name>Benny Neugebauer</name>
      <url>http://www.bennyn.de</url>
      <roles>
        <role>Original Author</role>
      </roles>
    </developer>
    <developer>
      <name>Michael Koppen</name>
      <email>michael.koppen@googlemail.com</email>
      <url>http://beanbelt.blogspot.de</url>
      <organizationUrl>https://github.com/Yserz</organizationUrl>
      <roles>
        <role>Original Author</role>
      </roles>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:git@github.com:bennyn/wlc-webapp.git</connection>
    <developerConnection>scm:git:git@github.com:bennyn/wlc-webapp.git</developerConnection>
    <url>https://github.com/bennyn/wlc-webapp</url>
    <tag>HEAD</tag>
  </scm>
  <issueManagement>
    <system>GitHub Issue Management</system>
    <url>https://github.com/bennyn/wlc-webapp/issues</url>
  </issueManagement>
  <distributionManagement>
    <repository>
      <id>maven-own-repo</id>
      <name>Own Repository</name>
      <layout>default</layout>
      <url>file://${project.basedir}/maven-repo/</url>
    </repository>
  </distributionManagement>

  <properties>
    <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
    
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    
    <jdbc.url>jdbc:mysql://localhost:3306/welovecoding</jdbc.url>
    <jdbc.username>welovecoding</jdbc.username>
    <jdbc.password>123456</jdbc.password>
    
    <gf.remote.address>0.0.0.0</gf.remote.address>
    <gf.remote.port>4848</gf.remote.port>
    <gf.remote.username>admin</gf.remote.username>
    <gf.remote.password>password</gf.remote.password>
    <gf.remote.deployable.type>war</gf.remote.deployable.type>
    
    <auth.google.client.id>123456.apps.googleusercontent.com</auth.google.client.id>
    <auth.google.client.secret>xyz</auth.google.client.secret>
    
    <project.stage>Development</project.stage>
    <javax.faces.project.stage>Development</javax.faces.project.stage>
    <prettyfaces.production>false</prettyfaces.production>
    <prettyfaces.development>true</prettyfaces.development>
    <test.secured.url>/xyz</test.secured.url>
    <test.generate.data>false</test.generate.data>
  </properties>
  
  <repositories>
    <repository>
      <id>mandubian-mvn</id>
      <url>http://mandubian-mvn.googlecode.com/svn/trunk/mandubian-mvn/repository</url>
    </repository>
    <!-- Google -->
    <repository>
      <id>google-api-services</id>
      <url>http://mavenrepo.google-api-java-client.googlecode.com/hg/</url>
    </repository>
    <repository>
      <id>maven.java.net</id>
      <name>Java.net Repository for Maven</name>
      <url>https://maven.java.net/content/groups/promoted/</url>
    </repository>
    <repository>
      <id>maven-own-repo</id>
      <layout>default</layout>
      <name>Own Repository</name>
      <url>https://bitbucket.org/api/1.0/repositories/Yserz/ownmavenrepo/raw/HEAD/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>glassfish</id>
      <url>http://download.java.net/maven/glassfish</url>
    </repository>
  </repositories>
    
  <dependencies>
    <!-- JPA -->
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>eclipselink</artifactId>
      <version>2.5.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.persistence</groupId>
      <artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
      <version>2.5.1</version>
      <scope>provided</scope>
    </dependency>
    <!-- JUnit -->
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>2.0.1</version>
    </dependency>
    <dependency>
      <groupId>de.yser</groupId>
      <artifactId>OwnSimpleCache</artifactId>
      <version>0.2.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.3.1</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>2.2.2</version>
    </dependency>
    <dependency>
      <!-- Java EE Full Profile -->
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>7.0</version>
      <scope>provided</scope>
    </dependency>
    <!-- Google Plus -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.3.3</version>
    </dependency>
    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-plus</artifactId>
      <version>v1-rev123-1.18.0-rc</version>
    </dependency>
    <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client</artifactId>
      <version>1.18.0-rc</version>
    </dependency>
    <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client-jackson2</artifactId>
      <version>1.18.0-rc</version>
      <type>jar</type>
      <exclusions>
        <exclusion>
          <artifactId>jackson-core</artifactId>
          <groupId>com.fasterxml.jackson.core</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.google.oauth-client</groupId>
      <artifactId>google-oauth-client</artifactId>
      <version>1.18.0-rc</version>
    </dependency>
    <dependency>
      <groupId>com.google.api-client</groupId>
      <artifactId>google-api-client</artifactId>
      <version>1.18.0-rc</version>
    </dependency>
    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-youtube</artifactId>
      <version>v3-rev104-1.18.0-rc</version>
    </dependency>
    <!-- Jersey (REST) -->
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
      <version>2.7</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>2.7</version>
      <scope>provided</scope>
    </dependency>
    
    <!-- CORS -->
    <dependency>
      <groupId>com.thetransactioncompany</groupId>
      <artifactId>java-property-utils</artifactId>
      <version>1.9.1</version>
    </dependency>
    <dependency>
      <groupId>com.thetransactioncompany</groupId>
      <artifactId>cors-filter</artifactId>
      <version>1.9.1</version>
    </dependency>
    
    <!-- PrettyFaces: http://ocpsoft.org/prettyfaces/ -->
    <!-- for JSF 2.x -->
    <dependency>
      <groupId>org.ocpsoft.rewrite</groupId>
      <artifactId>rewrite-servlet</artifactId>
      <version>2.0.12.Final</version>
    </dependency>
    <dependency>
      <groupId>org.ocpsoft.rewrite</groupId>
      <artifactId>rewrite-config-prettyfaces</artifactId>
      <version>2.0.12.Final</version>
    </dependency>
    
    <!-- Database -->
    <dependency>
      <groupId>org.dbunit</groupId>
      <artifactId>dbunit</artifactId>
      <version>2.4.3</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-simple</artifactId>
      <version>1.5.6</version>
    </dependency>
    
    <!-- TESTING -->
    <dependency>
      <groupId>org.glassfish.main.extras</groupId>
      <artifactId>glassfish-embedded-all</artifactId>
      <version>4.0.1-b04</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.9.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>2.3.2</version>
      <type>jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>rest-assured</artifactId>
      <version>2.3.0</version>
      <scope>test</scope>
      <exclusions>
        <!-- Exclude Groovy because of classpath issues -->
        <exclusion>
          <groupId>org.codehaus.groovy</groupId>
          <artifactId>groovy</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <!-- Needs to be the same version that REST Assured depends on -->
      <version>2.2.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>json-path</artifactId>
      <version>2.3.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.restassured</groupId>
      <artifactId>json-schema-validator</artifactId>
      <version>2.3.0</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>jsr305</artifactId>
          <groupId>com.google.code.findbugs</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-core</artifactId>
          <groupId>com.fasterxml.jackson.core</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <pluginRepositories>
    <pluginRepository>
      <id>glassfish</id>
      <url>http://download.java.net/maven/glassfish</url>
    </pluginRepository>
    <pluginRepository>
      <name>oss.sonatype.org</name>
      <id>oss.sonatype.org</id>
      <url>http://oss.sonatype.org/content/groups/public</url>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <finalName>${project.artifactId}</finalName>
    
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    
    <plugins>
      <!-- TODO: We should make it work! -->
      <!--
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.3</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <mainClass>com.welovecoding.Main</mainClass>
        </configuration>
      </plugin>
      -->
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <id>render-maven-properties</id>
            <phase>validate</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo>STAGE................................: ${javax.faces.project.stage}</echo>
                <echo>-------------------------------------------</echo>
                <echo>project.artifactId...................: ${project.artifactId}</echo>
                <echo>project.basedir......................: ${project.basedir}</echo>
                <echo>project.build.directory..............: ${project.build.directory}</echo>
                <echo>project.build.outputDirectory........: ${project.build.outputDirectory}</echo>
                <echo />
                <echo>-- Remote Deploy Information --</echo>
                <echo>gf.remote.address....................: ${gf.remote.address}</echo>
                <echo>gf.remote.port.......................: ${gf.remote.port}</echo>
                <echo>gf.remote.username...................: ${gf.remote.username}</echo>
                <echo>gf.remote.password...................: ${gf.remote.password}</echo>
                <echo>gf.remote.deployable.type............: ${gf.remote.deployable.type}</echo>
                <echo />
                <echo>-- Database Information --</echo>
                <echo>jdbc.url.............................: ${jdbc.url}</echo>
                <echo>jdbc.username........................: ${jdbc.username}</echo>
                <echo>jdbc.password........................: ${jdbc.password}</echo>
                <echo />
                <echo>-- Google Information --</echo>
                <echo>auth.google.client.id................: ${auth.google.client.id}</echo>
                <echo>auth.google.client.secret............: ${auth.google.client.secret}</echo>
                <echo />
                <echo>-- Other Information --</echo>
                <echo>test.secured.url.....................: ${test.secured.url}</echo>
                <echo>test.generate.data...................: ${test.generate.data}</echo>
                
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <!-- http://www.javaworld.com/article/2073587/ -->
          <compilerArgument>-Xlint:all</compilerArgument>
          <compilerArgument>-Xlint:-fallthrough</compilerArgument>
          <!--http://stackoverflow.com/a/14298133/451634--> 
          <compilerArgument>-proc:none</compilerArgument>
          <compilerArguments>
            <endorseddirs>${endorsed.dir}</endorseddirs>
          </compilerArguments>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <!--<outputFileNameMapping>@{groupId}@-@{artifactId}@-@{baseVersion}@@{dashClassifier?}@.@{extension}@</outputFileNameMapping>-->
          <outputFileNameMapping>@{artifactId}@.@{extension}@</outputFileNameMapping>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <warName>${project.artifactId}</warName>
          <webResources> 
            <webResource> 
              <directory>${basedir}/src/main/webapp/WEB-INF</directory> 
              <includes> 
                <include>glassfish-resources.xml</include>
                <include>web.xml</include>
              </includes> 
              <targetPath>WEB-INF</targetPath> 
              <filtering>true</filtering> 
            </webResource> 
          </webResources> 
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <outputDirectory>${endorsed.dir}</outputDirectory>
              <silent>true</silent>
              <artifactItems>
                <artifactItem>
                  <groupId>javax</groupId>
                  <artifactId>javaee-endorsed-api</artifactId>
                  <version>7.0</version>
                  <type>jar</type>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- LESS CSS -->
      <!-- https://github.com/marceloverdijk/lesscss-maven-plugin -->
      <plugin>
        <groupId>org.lesscss</groupId>
        <artifactId>lesscss-maven-plugin</artifactId>
        <version>1.3.3</version>
        <configuration>
          <sourceDirectory>${project.basedir}/src/main/webapp/resources/less</sourceDirectory>
          <outputDirectory>${project.build.directory}/${project.build.finalName}/resources/css/generated</outputDirectory>
          <compress>true</compress>
          <force>false</force>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- RELEASE -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>2.5</version>
        <configuration>
          <arguments>-Dmaven.javadoc.skip=true</arguments>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.9.1</version>
        <executions>
          <!--add javadoc.jar to (snapshot) release--> 
          <execution>
            <id>attach-javadocs</id>
            <phase>deploy</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.1</version>
        <executions> 
          <!--http://stackoverflow.com/questions/4725668/how-to-deploy-snapshot-with-sources-and-javadoc--> 
          <!--explicitly define maven-deploy-plugin after other to force exec order--> 
          <execution>
            <id>deploy</id>
            <phase>deploy</phase>
            <goals>
              <goal>deploy</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-scm-plugin</artifactId>
        <version>1.9</version>
        <configuration>
          <tag>${project.artifactId}/${project.version}</tag>
        </configuration>
      </plugin>
      <!-- TESTPLUGINS -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.17</version>
        <configuration>
          <properties>
            <property>
              <name>listener</name>
              <value>util.TestRunListener</value>
            </property>
          </properties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.17</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <properties>
            <property>
              <name>listener</name>
              <value>util.IntegrationTestRunListener</value>
            </property>
          </properties>
          <systemPropertyVariables>
            <jdbcURL>${jdbc.url}</jdbcURL>
            <jdbcUsername>${jdbc.username}</jdbcUsername>
            <jdbcPassword>${jdbc.password}</jdbcPassword>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    </plugins>
  </build>
  
  <profiles>
    <profile>
      <id>test</id>
      <properties>
        <!-- Override properties here -->
        <project.stage>Development</project.stage>
        <javax.faces.project.stage>Development</javax.faces.project.stage>
        <test.secured.url>/*</test.secured.url>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>cobertura-maven-plugin</artifactId>
            <version>2.6</version>
            <configuration>
              <formats>
                <format>xml</format>
              </formats>
            </configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>cobertura</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>yuicompressor-maven-plugin</artifactId>
            <version>1.4.0</version>
            <configuration>
              <nosuffix>true</nosuffix>
              <jswarn>false</jswarn>
              <force>true</force>
              <excludes>
                <exclude>**/*.min.js</exclude>
                <exclude>**/*.min.css</exclude>
                <exclude>**/*-min.js</exclude>
                <exclude>**/*-min.css</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>compress</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <version>1.4.7</version>
            <configuration>
              <container>
                <containerId>glassfish4x</containerId>
                <type>remote</type>
                <!--<timeout>300000</timeout>  2 minutes -->
              </container>
              <configuration>
                <type>runtime</type>
                <properties>
                  <cargo.hostname>${gf.remote.address}</cargo.hostname>
                  <cargo.remote.username>${gf.remote.username}</cargo.remote.username>
                  <cargo.remote.password>${gf.remote.password}</cargo.remote.password>
                  <cargo.remote.port>${gf.remote.port}</cargo.remote.port>
                  <cargo.glassfish.domain.name>/domain1</cargo.glassfish.domain.name>
                </properties>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>${project.artifactId}</artifactId>
                  <type>${gf.remote.deployable.type}</type>
                </deployable>
              </deployables>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>org.glassfish.main.deployment</groupId>
                <artifactId>deployment-client</artifactId>
                <version>4.0</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>production</id>
      <properties>
        <!-- Override properties here -->
        <project.stage>Production</project.stage>
        <javax.faces.project.stage>Production</javax.faces.project.stage>
        <prettyfaces.production>true</prettyfaces.production>
        <prettyfaces.development>false</prettyfaces.development>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>cobertura-maven-plugin</artifactId>
            <version>2.6</version>
            <configuration>
              <formats>
                <format>xml</format>
              </formats>
            </configuration>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>cobertura</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>net.alchim31.maven</groupId>
            <artifactId>yuicompressor-maven-plugin</artifactId>
            <version>1.4.0</version>
            <configuration>
              <nosuffix>true</nosuffix>
              <jswarn>false</jswarn>
              <force>true</force>
              <excludes>
                <exclude>**/*.min.js</exclude>
                <exclude>**/*.min.css</exclude>
                <exclude>**/*-min.js</exclude>
                <exclude>**/*-min.css</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>compress</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <version>1.4.7</version>
            <configuration>
              <container>
                <containerId>glassfish4x</containerId>
                <type>remote</type>
                <!--<timeout>300000</timeout>  2 minutes -->
              </container>
              <configuration>
                <type>runtime</type>
                <properties>
                  <cargo.hostname>${gf.remote.address}</cargo.hostname>
                  <cargo.remote.username>${gf.remote.username}</cargo.remote.username>
                  <cargo.remote.password>${gf.remote.password}</cargo.remote.password>
                  <cargo.remote.port>${gf.remote.port}</cargo.remote.port>
                  <cargo.glassfish.domain.name>/domain1</cargo.glassfish.domain.name>
                </properties>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>${project.artifactId}</artifactId>
                  <type>${gf.remote.deployable.type}</type>
                </deployable>
              </deployables>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>org.glassfish.main.deployment</groupId>
                <artifactId>deployment-client</artifactId>
                <version>4.0</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
